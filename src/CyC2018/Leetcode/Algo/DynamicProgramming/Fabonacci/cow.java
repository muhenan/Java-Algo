package CyC2018.Leetcode.Algo.DynamicProgramming.Fabonacci;

/**
 * 假设农场中成熟的母牛每年只会生一头小母牛，且永远不会死。
 * 第一年农场有1头成熟的母牛，从第二年开始，母牛开始生小母牛，每只小母牛3年之后成熟又可以生小母牛。
 * 给定整数N，求N年后牛的数量。
 *
 *
 * 举个例子：
 *
 * 第1年：
 * 有一头成熟的母牛，记为a，总牛数为1
 * 第2年：
 * a生了新的小母牛，记为b，总牛数为2
 * 第3年：
 * a生了新的小母牛，记为c
 * b只有一岁，不能生
 * 总牛数为3
 * 第4年：
 * a生了新的小母牛，记为d
 * b有两岁，c有一岁，不能生
 * 总牛数为4
 * 第5年：
 * a生了新的小母牛，记为e
 * b三岁了，成熟了，生下了新的小母牛，记为f
 * c有两岁，e有一岁，不能生
 * 总牛数为6
 * 第6年：
 * c也成熟了，a、b、c分别生了一只，总数为9
 * 第6年：
 * d也成熟了，a、b、c、d分别生了一只，总数为9+4
 *
 *  1 2 3 4 5 6
 *  1 2 3 4 6 9
 * */


/**
 * 设 f(n) 为 n 年后牛的数量，则第 n 年牛的来源有两个:
 *
 * 1. 牛是永远不会死的，所以第 n-1 的牛都会活到第 n 年
 * 2. 还有一部分新生的牛，因为每只小牛3年之后成熟才可以生小牛，所以第 n-3 年的所有的的牛到了第 n 年会成熟而且开始生小母牛
 *
 * 递推公式：f(n) = f(n-1) + f(n-3)
 * base case：f(1)=1，f(2)=2，f(3)=3
 * */
public class cow {
}
